version: '3.8'

services:
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: westernaerodesign
      DOCKER_INFLUXDB_INIT_PASSWORD: Award Shelf
      DOCKER_INFLUXDB_INIT_ORG: westernaerodesign 
      DOCKER_INFLUXDB_INIT_BUCKET: Telemetry

  broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
  
  backend:
    build:
      context: ./
      dockerfile: dockerfiles/Dockerfile.backend
    ports:
      - "5000:5000"
    env_file:
      - ./backend/.env
    depends_on:
      - broker
      - influxdb
  
  frontend:
    build:
      context: ./
      dockerfile: dockerfiles/Dockerfile.frontend
    ports: 
      - "3000:3000"
    depends_on:
      - backend
    # links:
      # - backend
  testdata:
    build:
      context: ./
      dockerfile: dockerfiles/Dockerfile.testdata
    depends_on:
      - broker

      
volumes:
  influxdb-data: